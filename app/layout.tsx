import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ServerLayoutComponent } from "@/app/components/test-bed/server";
import { thenable } from "@/app/components/test-bed/thenable";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <h1>I am running {process.env.NODE_ENV}</h1>
        <ServerLayoutComponent
          thenables={[
            Promise.resolve("hello, world"),
            () => Promise.resolve("function called"),
            thenable("this uses headers"),
          ]}
        >
          {children}
        </ServerLayoutComponent>
      </body>
    </html>
  );
}
